events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    upstream healthcare_backend {
        least_conn;
        server host.docker.internal:3000;
    }
 
    upstream user_backend {
        least_conn;
        server host.docker.internal:3001;
    }

    server {
        listen 80;
        
        # this is default directory to look for not necessary, only this dir, you can change this
        # according to your need in location block
        root /usr/share/nginx/html;
        # index index.html;
        # ðŸ”¥ðŸ”¥


        # user profiles goes here....
        # location /user/ {
        #     alias /usr/share/nginx/html/user/;
        #     try_files $uri $uri/ /index.html;
        #     add_header Cache-Control "no-cache";
        #     expires -1;
        # }


        # healthcare profile goes here...
        location /healthcare/ {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /healthcare/index.html;

            # max time 1day after that it will request again to server
            # add_header Cache-Control "public, max-age=86400";
            # expires 1d;
            
            # no caching!! this is for browser
            add_header Cache-Control "no-cache";
            expires -1;

        }

        # location = /healthcare {
        #     return 301 /healthcare/;
        # } 


        # this is healthcare golang backend server
        location /api/v1/healthcare/ {
            proxy_pass http://healthcare_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # user server
        location /api/v1/user/ {
            proxy_pass http://user_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        error_page 500 502 503 504 /50x.html;
    }
}